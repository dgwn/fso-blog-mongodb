{"version":3,"sources":["components/Login.js","components/NewUser.js","components/Notification.js","components/BlogForm.js","components/Togglable.js","reducers/notificationReducer.js","components/Users.js","components/User.js","services/blogs.js","reducers/blogReducer.js","components/BlogDetails.js","components/Nav.js","services/login.js","reducers/loginReducer.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["loginForm","handleLogin","username","setUsername","password","setPassword","Box","align","onSubmit","TextField","value","onChange","target","label","id","type","Button","variant","color","style","marginTop","NewUser","newUserVisible","setNewUserVisible","handleCreateUser","setName","name","zIndex","position","top","margin","backgroundColor","padding","border","boxShadow","onClick","event","notificationAlert","notification","Alert","severity","BlogForm","createBlog","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","preventDefault","title","author","url","primary","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","justify","secondary","buttonLabel","className","children","displayName","notificationTimeout","Users","users","data","map","user","blogs","length","DataTable","columns","property","header","Text","render","to","User","useParams","console","log","find","n","blog","List","pad","setNotification","content","dispatch","a","clearTimeout","setTimeout","resetNotification","notificationReducer","state","action","baseUrl","token","blogService","getAll","axios","get","then","response","create","newObject","config","headers","Authorization","post","patch","blogToUpdate","likes","newLikes","commentPost","comments","newComments","remove","blogToDelete","delete","setToken","newToken","getId","Math","random","toFixed","initBlogs","blogObject","newBlog","voteBlog","votes","votedBlog","commentBlog","comment","updatedComments","commentedBlog","removeBlog","blogReducer","newContent","blogToChange","changedBlog","idToDelete","filter","BlogDetails","useDispatch","history","useHistory","newComment","setNewComment","updateLikes","exception","postComment","deleteBlog","push","Card","height","width","background","CardHeader","CardBody","gap","key","direction","CardFooter","horizontal","icon","Favorite","hoverIndicator","Trash","window","confirm","linkStyle","textDecoration","alignContent","Nav","justifyContent","loginService","login","credentials","newUser","setUser","loginReducer","userReducer","ResponsiveGrid","areas","size","useContext","ResponsiveContext","Grid","App","useSelector","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","theme","deepMerge","global","font","family","breakpoints","small","desktop","setItem","stringify","userHandler","handleLogout","removeItem","addBlog","blogFormRef","current","useRef","Grommet","Consumer","responsive","rows","start","end","gridArea","Notification","Login","path","sort","b","marginBottom","reducer","combineReducers","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","forEach","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.62903952.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from \"grommet\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst loginForm = ({\n  handleLogin,\n  username,\n  setUsername,\n  password,\n  setPassword\n}) => {\n  return (\n    <Box align=\"center\">\n      <form onSubmit={handleLogin}>\n        <div>\n          {/* Username:\n    <input\n      type=\"text\"\n      value={username}\n      name=\"Username\"\n      onChange={({ target }) => setUsername(target.value)}\n    /> */}\n          <TextField\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            label=\"Username\"\n            id=\"username\"\n          />\n        </div>\n\n        <div>\n          <TextField\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n          />\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n          id=\"login-button\"\n        >\n          Login\n        </Button>\n        <br />\n        <br />\n      </form>\n    </Box>\n  );\n};\n\nexport default loginForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from \"grommet\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst NewUser = ({\n  newUserVisible,\n  setNewUserVisible,\n  handleCreateUser,\n  username,\n  setUsername,\n  password,\n  setPassword,\n  setName,\n  name\n}) => {\n  const cancelCreate = (event) => {\n    setNewUserVisible(false);\n  };\n  return (\n    <Box\n      align=\"center\"\n      style={{\n        zIndex: 5,\n        position: \"absolute\",\n        top: \"20vh\",\n        margin: \"auto\",\n        backgroundColor: \"white\",\n        padding: \"80px\",\n        border: \"1px solid black\",\n        boxShadow: \"8px 8px 0px black\"\n      }}\n    >\n      <h4>Create an Account</h4>\n      <form onSubmit={handleCreateUser}>\n        <div>\n          {/* Username:\n    <input\n      type=\"text\"\n      value={username}\n      name=\"Username\"\n      onChange={({ target }) => setUsername(target.value)}\n    /> */}\n          <TextField\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            label=\"Username\"\n            id=\"username\"\n          />\n        </div>\n\n        <div>\n          <TextField\n            value={name}\n            onChange={({ target }) => setName(target.value)}\n            label=\"Name\"\n            type=\"name\"\n            id=\"name\"\n          />\n        </div>\n\n        <div>\n          <TextField\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n          />\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ margin: 10 }}\n          id=\"login-button\"\n        >\n          Sign Me Up!\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          style={{ margin: 10 }}\n          id=\"cancel\"\n          onClick={cancelCreate}\n        >\n          Cancel\n        </Button>\n        <br />\n        <br />\n      </form>\n    </Box>\n  );\n};\n\nexport default NewUser;\n","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst notificationAlert = ({ notification }) => {\n  return (\n    <div\n      style={{\n        zIndex: 5,\n        position: \"absolute\",\n        top: \"20vh\",\n        margin: \"auto\"\n      }}\n    >\n      <Alert\n        severity=\"info\"\n        style={{ padding: \"80px\", boxShadow: \"8px 8px 0px black\" }}\n      >\n        {notification}\n      </Alert>\n    </div>\n  );\n};\n\nexport default notificationAlert;\n","import React, { useState } from \"react\";\nimport { Button } from \"grommet\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst BlogForm = ({ createBlog }) => {\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"http://\");\n\n  const addBlog = (event) => {\n    event.preventDefault();\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    });\n    setNewTitle(\"\");\n    setNewAuthor(\"\");\n    setNewUrl(\"http://\");\n  };\n\n  return (\n    <form onSubmit={addBlog} id=\"blogForm\">\n      <div>\n        <TextField\n          value={newTitle}\n          onChange={({ target }) => setNewTitle(target.value)}\n          label=\"Title\"\n          id=\"titleInput\"\n        />\n      </div>\n\n      <div>\n        <TextField\n          value={newAuthor}\n          onChange={({ target }) => setNewAuthor(target.value)}\n          label=\"Author\"\n          id=\"authorInput\"\n        />\n      </div>\n\n      <div>\n        <TextField\n          value={newUrl}\n          type=\"url\"\n          onChange={({ target }) => setNewUrl(target.value)}\n          label=\"URL\"\n          id=\"urlInput\"\n        />\n      </div>\n\n      <Button primary type=\"submit\" margin={{ top: \"small\" }} label=\"Submit\" />\n\n      <br />\n      <br />\n    </form>\n  );\n};\nexport default BlogForm;\n","import React, { useState, useImperativeHandle } from \"react\";\nimport { Box, Button } from \"grommet\";\nimport PropTypes from \"prop-types\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n\n  return (\n    <Box align=\"center\" justify=\"center\">\n      <div style={hideWhenVisible}>\n        <Button\n          secondary\n          onClick={toggleVisibility}\n          margin={{ top: \"small\" }}\n          label={props.buttonLabel}\n        />\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <Button secondary onClick={toggleVisibility} label=\"Cancel\" />\n      </div>\n    </Box>\n  );\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nTogglable.displayName = \"Togglable\";\n\nexport default Togglable;\n","let notificationTimeout;\n\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      const content = action.data.content;\n      return content;\n    case \"RESET_NOTIFICATION\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (content) => {\n  return async (dispatch) => {\n    await dispatch({\n      type: \"SET_NOTIFICATION\",\n      data: { content }\n    });\n\n    clearTimeout(notificationTimeout);\n    notificationTimeout = setTimeout(() => {\n      dispatch(resetNotification());\n    }, 2000);\n  };\n};\n\nexport const resetNotification = () => {\n  return { type: \"RESET_NOTIFICATION\" };\n};\n\nexport default notificationReducer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n\nimport { DataTable, Text, Box, Meter } from \"grommet\";\n\nconst Users = (users) => {\n  const data = users.users.map((user) => ({\n    name: user.name,\n    id: user.id,\n    blogs: user.blogs.length\n  }));\n\n  return (\n    <div>\n      {/* <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead style={{ backgroundColor: \"#3f51b5\" }}>\n            <TableRow>\n              <TableCell align=\"left\" style={{ color: \"white\" }}>\n                Name\n              </TableCell>\n              <TableCell align=\"right\" style={{ color: \"white\" }}>\n                Blogs Created\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.users.map((user) => (\n              <TableRow key={user.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link to={`/users/${user.id}`}>{user.name}</Link>\n                </TableCell>\n                <TableCell align=\"right\">{user.blogs.length}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer> */}\n\n      <DataTable\n        columns={[\n          {\n            property: \"name\",\n            header: <Text>User</Text>,\n            primary: true,\n            render: (user) => <Link to={`/users/${user.id}`}>{user.name}</Link>\n          },\n          {\n            property: \"blogs\",\n            header: \"Number of Blogs\"\n          }\n        ]}\n        data={data}\n      />\n    </div>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { List } from \"grommet\";\n\nconst User = (users) => {\n  const id = useParams().id;\n  console.log(users);\n\n  const user = users.users.find((n) => n.id === id);\n  if (!user) {\n    return null;\n  }\n\n  const data = user.blogs.map((blog) => ({ id: blog.id, title: blog.title }));\n\n  return (\n    <div>\n      <h2>{user.name}</h2>\n      <h4>Added Blogs:</h4>\n\n      <List data={data} pad=\"small\">\n        {(blog) => <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>}\n      </List>\n\n      {/* <ul>\n        {user.blogs.map((blog) => (\n          <li>\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default User;\n","import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\n\nlet token = null;\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst patch = async (blogToUpdate, likes) => {\n  const newLikes = {\n    likes: likes\n  };\n\n  const response = await axios.patch(baseUrl + \"/\" + blogToUpdate, newLikes);\n  return response.data;\n};\n\nconst commentPost = async (blogToUpdate, comments) => {\n  const newComments = {\n    comments: comments\n  };\n\n  const response = await axios.post(\n    baseUrl + \"/\" + blogToUpdate + \"/comments\",\n    newComments\n  );\n  return response.data;\n};\n\nconst remove = async (blogToDelete) => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.delete(baseUrl + \"/\" + blogToDelete, config);\n  return response.data;\n};\n\nconst blogService = { getAll, create, patch, commentPost, remove, setToken };\n\nexport default blogService;\n","import blogService from \"../services/blogs\";\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_BLOGS\":\n      return action.data;\n    case \"CREATE_BLOG\":\n      const newContent = { ...action.data.data.blog, id: getId() };\n      return [...state, newContent];\n    case \"VOTE\":\n      const id = action.data.data.blog.id;\n      const blogToChange = state.find((n) => n.id === id);\n      const changedBlog = {\n        ...blogToChange,\n        likes: blogToChange.likes + 1\n      };\n      return state.map((blog) => (blog.id !== id ? blog : changedBlog));\n    case \"COMMENT\":\n      return state;\n    case \"REMOVE_BLOG\":\n      const idToDelete = action.data;\n      return state.filter((blog) => blog.id !== idToDelete);\n    default:\n      return state;\n  }\n};\n\nexport const initBlogs = (blogs) => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: \"INIT_BLOGS\",\n      data: blogs\n    });\n  };\n};\n\nexport const createBlog = (blogObject) => {\n  return async (dispatch) => {\n    const newBlog = await blogService.create(blogObject);\n    dispatch({\n      type: \"CREATE_BLOG\",\n      data: newBlog\n    });\n  };\n};\n\nexport const voteBlog = (id, votes) => {\n  return async (dispatch) => {\n    const votedBlog = await blogService.patch(id, votes + 1);\n    dispatch({\n      type: \"VOTE\",\n      data: votedBlog\n    });\n  };\n};\n\nexport const commentBlog = (id, comments, comment) => {\n  return async (dispatch) => {\n    const updatedComments = [...comments, comment];\n    const commentedBlog = await blogService.commentPost(id, updatedComments);\n    dispatch({\n      type: \"COMMENT\",\n      data: commentedBlog\n    });\n  };\n};\n\nexport const removeBlog = (id) => {\n  return async (dispatch) => {\n    await blogService.remove(id);\n    dispatch({\n      type: \"REMOVE_BLOG\",\n      data: id\n    });\n  };\n};\n\nexport default blogReducer;\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setNotification,\n  resetNotification\n} from \".././reducers/notificationReducer\";\nimport { voteBlog, removeBlog, commentBlog } from \".././reducers/blogReducer\";\nimport TextField from \"@material-ui/core/TextField\";\n// import Button from \"@material-ui/core/Button\";\n\nimport { Box, Button, Card, CardHeader, CardBody, CardFooter } from \"grommet\";\nimport { Favorite, Trash } from \"grommet-icons\";\n\nconst BlogDetails = (blogs) => {\n  const id = useParams().id;\n  const blog = blogs.blogs.find((n) => n.id === id);\n  const getId = () => (100000 * Math.random()).toFixed(0);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [newComment, setNewComment] = useState(\"\");\n\n  const updateLikes = async (blog) => {\n    try {\n      // note that by putting notifications first, clicks to update likes may not register when rapidly clicking,\n      // yet if patch is done first, notifcation timeout will take longer than 5 seconds\n      // this most likely would not be an issue if using a faster, production connection to mongodb?\n\n      dispatch(resetNotification());\n      dispatch(voteBlog(blog.id, blog.likes));\n      dispatch(\n        setNotification(\n          `\"${blog.title}\" has been updated to ${blog.likes + 1} likes`\n        )\n      );\n    } catch (exception) {\n      dispatch(setNotification(\"Error updating blog\"));\n    }\n  };\n\n  const postComment = async (event) => {\n    try {\n      event.preventDefault();\n      dispatch(resetNotification());\n      dispatch(setNotification(\"comment has been added\"));\n      dispatch(commentBlog(blog.id, blog.comments, newComment));\n\n      setNewComment(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"Error adding comment\"));\n    }\n  };\n\n  const deleteBlog = async (blog) => {\n    try {\n      // await blogService.remove(blog.id);\n      dispatch(removeBlog(blog.id));\n      dispatch(setNotification(`\"${blog.title}\" has been deleted`));\n      history.push(\"/\");\n    } catch (exception) {\n      dispatch(setNotification(\"Error deleting blog\"));\n    }\n  };\n\n  return (\n    <div className=\"blog\">\n      {/* <h2>\n        &quot;{blog.title}&quot; - {blog.author}\n      </h2>\n      <p>{blog.url}</p>\n      <p>{blog.likes} likes</p>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        style={{ marginLeft: \".5rem\" }}\n        onClick={() => updateLikes(blog)}\n      >\n        Like\n      </Button>\n      &nbsp;\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          if (window.confirm(\"Do you really want to remove this blog?\")) {\n            deleteBlog(blog);\n          }\n        }}\n      >\n        Delete\n      </Button>\n      <p>added by {blog.user.name}</p>\n      <h3>Comments:</h3>\n      <ul>\n        {blog.comments.map((comment) => (\n          <li key={getId()}>{comment}</li>\n        ))}\n      </ul>\n      <form onSubmit={postComment} id=\"blogForm\">\n        <div>\n          <TextField\n            value={newComment}\n            onChange={({ target }) => setNewComment(target.value)}\n            label=\"Comment\"\n            id=\"commentInput\"\n          />\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          Submit\n        </Button>\n        <br />\n        <br />\n      </form> */}\n      <Card height=\"auto\" width=\"medium\" background=\"light-3\" margin=\"10px\">\n        <CardHeader pad=\"medium\">\n          <h2>\n            &quot;{blog.title}&quot; - {blog.author}\n          </h2>\n        </CardHeader>\n        <CardBody pad=\"medium\" gap=\"none\" background=\"light-1\">\n          <p>{blog.url}</p>\n          <p>added by {blog.user.name}</p>\n          <h3>Comments:</h3>\n          <ul>\n            {blog.comments.map((comment) => (\n              <li key={getId()}>{comment}</li>\n            ))}\n          </ul>\n          <form onSubmit={postComment} id=\"blogForm\">\n            <Box direction=\"row\" justify=\"around\">\n              <div>\n                <TextField\n                  value={newComment}\n                  onChange={({ target }) => setNewComment(target.value)}\n                  label=\"Comment\"\n                  id=\"commentInput\"\n                />\n              </div>\n\n              <Button\n                primary\n                type=\"submit\"\n                margin={{ top: \"small\" }}\n                label=\"Submit\"\n              />\n              <br />\n              <br />\n            </Box>\n          </form>\n        </CardBody>\n        <CardFooter pad={{ horizontal: \"medium\" }} background=\"light-2\">\n          <Button\n            icon={<Favorite color=\"red\" onClick={() => updateLikes(blog)} />}\n            hoverIndicator\n          />\n          <p>{blog.likes} Likes</p>\n          <Button\n            icon={\n              <Trash\n                color=\"plain\"\n                onClick={() => {\n                  if (\n                    window.confirm(\"Do you really want to remove this blog?\")\n                  ) {\n                    deleteBlog(blog);\n                  }\n                }}\n              />\n            }\n            hoverIndicator\n          />\n        </CardFooter>\n      </Card>\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"black\",\n  \":hover\": {\n    color: \"red\"\n  },\n  alignContent: \"center\",\n  height: \"100%\"\n};\n\nconst Nav = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"auto\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        backgroundColor: \"#e6f2fd\",\n        marginTop: \"0\"\n      }}\n    >\n      <Link to=\"/\" style={linkStyle}>\n        <h3>Blogs</h3>\n      </Link>\n      &nbsp;\n      <Link to=\"/users\" style={linkStyle}>\n        <h3>Users</h3>\n      </Link>\n    </div>\n  );\n};\n\nexport default Nav;\n","import axios from \"axios\";\nconst baseUrl = \"/api/login\";\nconst userUrl = \"/api/users\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst newUser = async (credentials) => {\n  const response = await axios.post(userUrl, credentials);\n  return response.data;\n};\nconst loginService = { login, newUser };\n\nexport default loginService;\n","const loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      const token = action.data;\n      return token;\n    case \"LOGOUT\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setUser = (data) => {\n  return async (dispatch) => {\n    await dispatch({\n      type: \"LOGIN\",\n      data\n    });\n  };\n};\n\nexport const resetUser = () => {\n  return { type: \"LOGOUT\" };\n};\n\nexport default loginReducer;\n","import axios from \"axios\";\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_USERS\":\n      return action.data.data;\n    default:\n      return state;\n  }\n};\n\nexport const initUsers = (users) => {\n  return async (dispatch) => {\n    const users = await axios.get(\"/api/users\");\n    dispatch({\n      type: \"INIT_USERS\",\n      data: users\n    });\n  };\n};\n\nexport default userReducer;\n","// Core\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\n// Components\nimport Login from \"./components/Login\";\nimport NewUser from \"./components/NewUser\";\n// import Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\";\n// import BlogTable from \"./components/BlogTable\";\nimport Togglable from \"./components/Togglable\";\nimport Users from \"./components/Users\";\nimport User from \"./components/User\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport Nav from \"./components/Nav\";\n\n// Services\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\n// Grommet\nimport { Grommet, Box, Button, Grid, ResponsiveContext } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\n\n// Material-UI\n// import Grid from \"@material-ui/core/Grid\";\n// import Button from \"@material-ui/core/Button\";\n\n// Reducers\nimport {\n  setNotification,\n  resetNotification\n} from \"./reducers/notificationReducer\";\nimport { createBlog, initBlogs, voteBlog } from \"./reducers/blogReducer\";\nimport { setUser, resetUser } from \"./reducers/loginReducer\";\n\n// Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initUsers } from \"./reducers/usersReducer\";\n\nconst ResponsiveGrid = ({ children, areas, ...props }) => {\n  const size = React.useContext(ResponsiveContext);\n  return (\n    <Grid areas={areas[size]} {...props}>\n      {children}\n    </Grid>\n  );\n};\n\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [newUserVisible, setNewUserVisible] = useState(false);\n  // const [visible, setVisible] = useState(false);\n\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.notification);\n\n  const blogs = useSelector((state) => state.blogs);\n  const user = useSelector((state) => state.user);\n  const users = useSelector((state) => state.users);\n\n  // rerender blog list whenever the URL field changes, i.e. when the field is reset on submit\n  useEffect(() => {\n    dispatch(initBlogs());\n    dispatch(initUsers());\n  }, [notification, dispatch]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n\n      blogService.setToken(user.token);\n    }\n  }, [dispatch]);\n\n  const theme = deepMerge({\n    global: {\n      font: {\n        family: \"Roboto\",\n        size: \"18px\",\n        height: \"20px\"\n      },\n      breakpoints: {\n        small: {\n          value: 900\n        },\n        desktop: { value: 1500 }\n      }\n    }\n  });\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      dispatch(setUser(user));\n      dispatch(setNotification(\"Logged in\"));\n\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"Wrong credentials\"));\n    }\n  };\n\n  const handleCreateUser = async () => {\n    try {\n      console.log(name);\n\n      await loginService.newUser({\n        username,\n        name,\n        password\n      });\n\n      dispatch(setNotification(\"New user created\"));\n\n      setUsername(\"\");\n      setPassword(\"\");\n      setName(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"Error\"));\n    }\n  };\n\n  const userHandler = (event) => {\n    event.preventDefault();\n    setNewUserVisible(true);\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    window.localStorage.removeItem(\"loggedBlogAppUser\");\n    dispatch(resetUser());\n    dispatch(setNotification(\"Logged out\"));\n\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const addBlog = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility();\n\n      dispatch(createBlog(blogObject));\n\n      dispatch(setNotification(`\"${blogObject.title}\" has been added`));\n    } catch (exception) {\n      dispatch(setNotification(\"Error posting blog\"));\n    }\n  };\n\n  // const deleteBlog = async (blog) => {\n  //   try {\n  //     // await blogService.remove(blog.id);\n  //     dispatch(removeBlog(blog.id));\n  //     dispatch(setNotification(`\"${blog.title}\" has been deleted`));\n  //   } catch (exception) {\n  //     dispatch(setNotification(\"Error deleting blog\"));\n  //   }\n  // };\n\n  const updateLikes = async (blog) => {\n    try {\n      // note that by putting notifications first, clicks to update likes may not register when rapidly clicking,\n      // yet if patch is done first, notifcation timeout will take longer than 5 seconds\n      // this most likely would not be an issue if using a faster, production connection to mongodb?\n\n      dispatch(resetNotification());\n      dispatch(voteBlog(blog.id, blog.likes));\n      dispatch(\n        setNotification(\n          `\"${blog.title}\" has been updated to ${blog.likes + 1} likes`\n        )\n      );\n    } catch (exception) {\n      dispatch(setNotification(\"Error updating blog\"));\n    }\n  };\n\n  const welcomeUser = () => (\n    <Box align=\"center\">\n      <div>Welcome {user.name}</div>\n      <div>\n        <Button\n          primary\n          onClick={handleLogout}\n          color=\"status-critical\"\n          label=\"Logout\"\n        />\n      </div>\n    </Box>\n  );\n\n  const blogList = () => (\n    <div>\n      {blogs\n        .sort((a, b) => b.likes - a.likes)\n        .map((blog) => (\n          <div\n            key={blog.id}\n            style={{\n              border: \"1px solid black\",\n              marginBottom: \".5rem\",\n              padding: \"1rem\",\n              width: \"20rem\"\n            }}\n          >\n            {/* <Blog key={blog.id} blog={blog} /> */}\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n            {/* <Togglable buttonLabel=\"View\">\n              {blog.url}\n              <br />\n              <div style={{ display: \"flex\" }}>\n                likes: &nbsp;\n                <div className=\"likesNumber\"> {blog.likes}</div>\n              </div>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{ marginLeft: \".5rem\" }}\n                onClick={() => updateLikes(blog)}\n              >\n                Like\n              </Button>\n              <br />\n              blog.user.name must be expressed after result of a conditional, otherwise  blog details try to render before post request goes through\n              {blog.user !== undefined && blog.user.name}\n              <br />\n              {/*  same as above \n              {blog.user !== undefined && blog.user.name === user.name && (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    if (\n                      window.confirm(\"Do you really want to remove this blog?\")\n                    ) {\n                      deleteBlog(blog);\n                    }\n                  }}\n                >\n                  Delete\n                </Button>\n              )}\n              <br />\n            </Togglable> */}\n          </div>\n        ))}\n    </div>\n  );\n\n  const blogFormRef = useRef();\n\n  return (\n    <Grommet theme={theme}>\n      <ResponsiveContext.Consumer>\n        {(size) => (\n          <ResponsiveGrid\n            responsive={true}\n            rows={[\"xsmall\", \"auto\", \"auto\"]}\n            columns={[\"auto\", \"auto\"]}\n            gap=\"small\"\n            areas={{\n              small: [\n                { name: \"nav\", start: [0, 0], end: [1, 0] },\n                { name: \"login\", start: [0, 1], end: [1, 1] },\n                { name: \"blogs\", start: [0, 2], end: [1, 2] }\n              ],\n              desktop: [\n                { name: \"nav\", start: [0, 0], end: [1, 0] },\n                { name: \"login\", start: [0, 1], end: [0, 1] },\n                { name: \"blogs\", start: [1, 1], end: [1, 1] }\n              ]\n            }}\n          >\n            <Router>\n              <Box gridArea=\"nav\">\n                <Nav />\n                {notification !== null && (\n                  <Notification notification={notification} />\n                )}\n              </Box>\n              <Box gridArea=\"login\" align=\"center\">\n                <h2>Blogs</h2>\n\n                {user === null && (\n                  <>\n                    <Login\n                      handleLogin={handleLogin}\n                      username={username}\n                      setUsername={setUsername}\n                      password={password}\n                      setPassword={setPassword}\n                    />\n                    {newUserVisible === true && (\n                      <NewUser\n                        newUserVisible={newUserVisible}\n                        setNewUserVisible={setNewUserVisible}\n                        handleCreateUser={handleCreateUser}\n                        username={username}\n                        setUsername={setUsername}\n                        password={password}\n                        setPassword={setPassword}\n                        setName={setName}\n                        name={name}\n                      />\n                    )}\n                    <Button\n                      variant=\"outlined\"\n                      onClick={userHandler}\n                      label=\"Sign Me Up!\"\n                    ></Button>\n                  </>\n                )}\n                {user !== null && welcomeUser()}\n                {user !== null && (\n                  <Togglable buttonLabel=\"Post Blog\" ref={blogFormRef}>\n                    <BlogForm createBlog={addBlog} />\n                  </Togglable>\n                )}\n              </Box>\n              <Box gridArea=\"blogs\" align=\"center\" alignContent=\"center\">\n                {/* <Router> */}\n                <Switch>\n                  <Route path=\"/users/:id\">\n                    <User users={users} />\n                  </Route>\n                  <Route path=\"/users\">\n                    <Users users={users} />\n                  </Route>\n                  <Route path=\"/blogs/:id\">\n                    <BlogDetails blogs={blogs} updateLikes={updateLikes} />\n                  </Route>\n                  <Route path=\"/\">{blogList()}</Route>\n                </Switch>\n                {/* </Router> */}\n\n                {/* {user !== null && <BlogTable blogs={blogs} />} */}\n              </Box>\n            </Router>\n          </ResponsiveGrid>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport blogReducer, { initBlogs } from \"./reducers/blogReducer\";\nimport loginReducer from \"./reducers/loginReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\n\nimport blogService from \"./services/blogs\";\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  users: usersReducer,\n  blogs: blogReducer,\n  notification: notificationReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nblogService.getAll().then((blogs) =>\n  blogs.forEach((blog) => {\n    store.dispatch(initBlogs(blogs));\n  })\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}