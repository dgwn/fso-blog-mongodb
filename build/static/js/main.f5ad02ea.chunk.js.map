{"version":3,"sources":["components/Login.js","components/NewUser.js","components/Notification.js","components/BlogForm.js","components/Togglable.js","reducers/notificationReducer.js","components/Users.js","components/User.js","services/blogs.js","reducers/blogReducer.js","components/BlogDetails.js","components/Nav.js","services/login.js","reducers/loginReducer.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["loginForm","handleLogin","username","setUsername","password","setPassword","Box","align","onSubmit","TextField","value","onChange","target","label","id","type","Button","variant","color","style","marginTop","NewUser","newUserVisible","setNewUserVisible","handleCreateUser","setName","name","zIndex","position","top","margin","backgroundColor","padding","border","boxShadow","onClick","event","notificationAlert","notification","Alert","severity","BlogForm","createBlog","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","preventDefault","title","author","url","primary","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","justify","secondary","buttonLabel","className","children","displayName","notificationTimeout","Users","users","data","map","user","blogs","length","DataTable","columns","property","header","Text","render","to","User","useParams","console","log","find","n","blog","List","pad","setNotification","content","dispatch","clearTimeout","setTimeout","resetNotification","notificationReducer","state","action","baseUrl","token","create","newObject","config","headers","Authorization","axios","post","response","patch","blogToUpdate","likes","newLikes","commentPost","comments","newComments","remove","blogToDelete","delete","blogService","getAll","get","then","setToken","newToken","getId","Math","random","toFixed","initBlogs","blogObject","newBlog","voteBlog","votes","votedBlog","commentBlog","comment","updatedComments","commentedBlog","removeBlog","blogReducer","newContent","blogToChange","changedBlog","idToDelete","filter","BlogDetails","useDispatch","history","useHistory","newComment","setNewComment","updateLikes","exception","postComment","deleteBlog","push","Card","height","width","background","CardHeader","CardBody","gap","direction","CardFooter","horizontal","icon","Favorite","hoverIndicator","Trash","window","confirm","linkStyle","textDecoration","alignContent","Nav","justifyContent","login","credentials","newUser","loginService","setUser","loginReducer","userReducer","ResponsiveGrid","areas","size","useContext","ResponsiveContext","Grid","App","useSelector","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","theme","deepMerge","global","font","family","breakpoints","small","desktop","setItem","stringify","userHandler","handleLogout","removeItem","addBlog","blogFormRef","current","useRef","Grommet","Consumer","responsive","rows","start","end","gridArea","Notification","Login","path","sort","a","b","marginBottom","reducer","combineReducers","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","forEach","ReactDOM","document","getElementById"],"mappings":"iSAyDeA,EApDG,SAAH,GAMR,IALLC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YAEA,OACE,cAACC,EAAA,EAAG,CAACC,MAAM,SAAQ,SACjB,uBAAMC,SAAUP,EAAY,UAC1B,8BAQE,cAACQ,EAAA,EAAS,CACRC,MAAOR,EACPS,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOT,EAAYS,EAAOF,MAAM,EACnDG,MAAM,WACNC,GAAG,eAIP,8BACE,cAACL,EAAA,EAAS,CACRC,MAAON,EACPO,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOP,EAAYO,EAAOF,MAAM,EACnDG,MAAM,WACNE,KAAK,WACLD,GAAG,eAIP,cAACE,EAAA,EAAM,CACLC,QAAQ,WACRC,MAAM,UACNH,KAAK,SACLI,MAAO,CAAEC,UAAW,IACpBN,GAAG,eAAc,mBAInB,uBACA,2BAIR,ECyCeO,EA3FC,SAAH,GACG,EAAdC,eASK,IARLC,EAAiB,EAAjBA,kBACAC,EAAgB,EAAhBA,iBACAtB,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAoB,EAAO,EAAPA,QACAC,EAAI,EAAJA,KAKA,OACE,eAACpB,EAAA,EAAG,CACFC,MAAM,SACNY,MAAO,CACLQ,OAAQ,EACRC,SAAU,WACVC,IAAK,OACLC,OAAQ,OACRC,gBAAiB,QACjBC,QAAS,OACTC,OAAQ,kBACRC,UAAW,qBACX,UAEF,mDACA,uBAAM1B,SAAUgB,EAAiB,UAC/B,8BAQE,cAACf,EAAA,EAAS,CACRC,MAAOR,EACPS,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOT,EAAYS,EAAOF,MAAM,EACnDG,MAAM,WACNC,GAAG,eAIP,8BACE,cAACL,EAAA,EAAS,CACRC,MAAOgB,EACPf,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOa,EAAQb,EAAOF,MAAM,EAC/CG,MAAM,OACNE,KAAK,OACLD,GAAG,WAIP,8BACE,cAACL,EAAA,EAAS,CACRC,MAAON,EACPO,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOP,EAAYO,EAAOF,MAAM,EACnDG,MAAM,WACNE,KAAK,WACLD,GAAG,eAIP,cAACE,EAAA,EAAM,CACLC,QAAQ,WACRC,MAAM,UACNH,KAAK,SACLI,MAAO,CAAEW,OAAQ,IACjBhB,GAAG,eAAc,yBAInB,cAACE,EAAA,EAAM,CACLC,QAAQ,WACRC,MAAM,YACNC,MAAO,CAAEW,OAAQ,IACjBhB,GAAG,SACHqB,QArEa,SAACC,GACpBb,GAAkB,EACpB,EAmE8B,oBAIxB,uBACA,4BAIR,E,SCvEec,EApBW,SAAH,GAA0B,IAApBC,EAAY,EAAZA,aAC3B,OACE,qBACEnB,MAAO,CACLQ,OAAQ,EACRC,SAAU,WACVC,IAAK,OACLC,OAAQ,QACR,SAEF,cAACS,EAAA,EAAK,CACJC,SAAS,OACTrB,MAAO,CAAEa,QAAS,OAAQE,UAAW,qBAAsB,SAE1DI,KAIT,E,SCqCeG,EAtDE,SAAH,GAAwB,IAAlBC,EAAU,EAAVA,WAClB,EAAgCC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,KAC5B,EAAkCF,mBAAS,IAAG,mBAAvCG,EAAS,KAAEC,EAAY,KAC9B,EAA4BJ,mBAAS,WAAU,mBAAxCK,EAAM,KAAEC,EAAS,KAcxB,OACE,uBAAMzC,SAbQ,SAAC4B,GACfA,EAAMc,iBACNR,EAAW,CACTS,MAAOP,EACPQ,OAAQN,EACRO,IAAKL,IAEPH,EAAY,IACZE,EAAa,IACbE,EAAU,UACZ,EAG2BnC,GAAG,WAAU,UACpC,8BACE,cAACL,EAAA,EAAS,CACRC,MAAOkC,EACPjC,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOiC,EAAYjC,EAAOF,MAAM,EACnDG,MAAM,QACNC,GAAG,iBAIP,8BACE,cAACL,EAAA,EAAS,CACRC,MAAOoC,EACPnC,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOmC,EAAanC,EAAOF,MAAM,EACpDG,MAAM,SACNC,GAAG,kBAIP,8BACE,cAACL,EAAA,EAAS,CACRC,MAAOsC,EACPjC,KAAK,MACLJ,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOqC,EAAUrC,EAAOF,MAAM,EACjDG,MAAM,MACNC,GAAG,eAIP,cAAC,IAAM,CAACwC,SAAO,EAACvC,KAAK,SAASe,OAAQ,CAAED,IAAK,SAAWhB,MAAM,WAE9D,uBACA,yBAGN,ECrDM0C,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GACzC,MAA8BhB,oBAAS,GAAM,mBAAtCiB,EAAO,KAAEC,EAAU,KAEpBC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,EACd,EAQA,OANAM,8BAAoBP,GAAK,WACvB,MAAO,CACLM,mBAEJ,IAGE,eAAC3D,EAAA,EAAG,CAACC,MAAM,SAAS4D,QAAQ,SAAQ,UAClC,qBAAKhD,MAAO2C,EAAgB,SAC1B,cAAC,IAAM,CACLM,WAAS,EACTjC,QAAS8B,EACTnC,OAAQ,CAAED,IAAK,SACfhB,MAAO6C,EAAMW,gBAGjB,sBAAKlD,MAAO6C,EAAiBM,UAAU,mBAAkB,UACtDZ,EAAMa,SACP,cAAC,IAAM,CAACH,WAAS,EAACjC,QAAS8B,EAAkBpD,MAAM,gBAI3D,IAMA0C,EAAUiB,YAAc,YAETjB,IC5CXkB,ED4CWlB,I,kBEsBAmB,EArDD,SAACC,GACb,IAAMC,EAAOD,EAAMA,MAAME,KAAI,SAACC,GAAI,MAAM,CACtCpD,KAAMoD,EAAKpD,KACXZ,GAAIgE,EAAKhE,GACTiE,MAAOD,EAAKC,MAAMC,OACnB,IAED,OACE,8BA0BE,cAACC,EAAA,EAAS,CACRC,QAAS,CACP,CACEC,SAAU,OACVC,OAAQ,cAACC,EAAA,EAAI,mBACb/B,SAAS,EACTgC,OAAQ,SAACR,GAAI,OAAK,cAAC,IAAI,CAACS,GAAE,iBAAYT,EAAKhE,IAAK,SAAEgE,EAAKpD,MAAY,GAErE,CACEyD,SAAU,QACVC,OAAQ,oBAGZR,KAAMA,KAId,E,SC3BeY,EA/BF,SAACb,GACZ,IAAM7D,EAAK2E,cAAY3E,GACvB4E,QAAQC,IAAIhB,GAEZ,IAAMG,EAAOH,EAAMA,MAAMiB,MAAK,SAACC,GAAC,OAAKA,EAAE/E,KAAOA,CAAE,IAChD,IAAKgE,EACH,OAAO,KAGT,IAAMF,EAAOE,EAAKC,MAAMF,KAAI,SAACiB,GAAI,MAAM,CAAEhF,GAAIgF,EAAKhF,GAAIqC,MAAO2C,EAAK3C,MAAO,IAEzE,OACE,gCACE,6BAAK2B,EAAKpD,OACV,8CAEA,cAACqE,EAAA,EAAI,CAACnB,KAAMA,EAAMoB,IAAI,QAAO,SAC1B,SAACF,GAAI,OAAK,cAAC,IAAI,CAACP,GAAE,iBAAYO,EAAKhF,IAAK,SAAEgF,EAAK3C,OAAa,MAYrE,E,QFrBa8C,EAAkB,SAACC,GAC9B,wDAAO,WAAOC,GAAQ,2FACdA,EAAS,CACbpF,KAAM,mBACN6D,KAAM,CAAEsB,aACP,KAAD,EAEFE,aAAa3B,GACbA,EAAsB4B,YAAW,WAC/BF,EAASG,IACX,GAAG,KAAM,2CACV,mDAVD,EAWF,EAEaA,EAAoB,WAC/B,MAAO,CAAEvF,KAAM,qBACjB,EAEewF,EA9Ba,WAA2B,IAA1BC,EAAK,uDAAG,KAAMC,EAAM,uCAC/C,OAAQA,EAAO1F,MACb,IAAK,mBACH,IAAMmF,EAAUO,EAAO7B,KAAKsB,QAC5B,OAAOA,EACT,IAAK,qBACH,OAAO,KACT,QACE,OAAOM,EAEb,E,yBGXME,EAAU,aAEZC,EAAQ,KAUNC,EAAM,iDAAG,WAAOC,GAAS,mFAG5B,OAFKC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAC1B,EAAD,OACsBM,IAAMC,KAAKR,EAASG,EAAWC,GAAQ,KAAD,EAA/C,OAARK,EAAQ,yBACPA,EAASvC,MAAI,2CACrB,gBANW,sCAQNwC,EAAK,iDAAG,WAAOC,EAAcC,GAAK,mFAGrC,OAFKC,EAAW,CACfD,MAAOA,GACP,EAAD,OAEsBL,IAAMG,MAAMV,EAAU,IAAMW,EAAcE,GAAU,KAAD,EAA5D,OAARJ,EAAQ,yBACPA,EAASvC,MAAI,2CACrB,gBAPU,wCASL4C,EAAW,iDAAG,WAAOH,EAAcI,GAAQ,mFAG9C,OAFKC,EAAc,CAClBD,SAAUA,GACV,EAAD,OAEsBR,IAAMC,KAC3BR,EAAU,IAAMW,EAAe,YAC/BK,GACA,KAAD,EAHa,OAARP,EAAQ,yBAIPA,EAASvC,MAAI,2CACrB,gBAVgB,wCAYX+C,EAAM,iDAAG,WAAOC,GAAY,mFAG/B,OAFKd,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAC1B,EAAD,OACsBM,IAAMY,OAAOnB,EAAU,IAAMkB,EAAcd,GAAQ,KAAD,EAA3D,OAARK,EAAQ,yBACPA,EAASvC,MAAI,2CACrB,gBANW,sCAUGkD,EAFK,CAAEC,OA1CP,WAEb,OADgBd,IAAMe,IAAItB,GACXuB,MAAK,SAACd,GAAQ,OAAKA,EAASvC,IAAI,GACjD,EAuC8BgC,SAAQQ,QAAOI,cAAaG,SAAQO,SA9CjD,SAACC,GAChBxB,EAAK,iBAAawB,EACpB,GCJMC,EAAQ,WAAH,OAAU,IAASC,KAAKC,UAAUC,QAAQ,EAAG,EA2B3CC,EAAY,SAACzD,GACxB,wDAAO,WAAOoB,GAAQ,iGACA2B,EAAYC,SAAS,KAAD,EAAlChD,EAAK,OACXoB,EAAS,CACPpF,KAAM,aACN6D,KAAMG,IACL,2CACJ,mDAND,EAOF,EAEarC,EAAa,SAAC+F,GACzB,wDAAO,WAAOtC,GAAQ,iGACE2B,EAAYlB,OAAO6B,GAAY,KAAD,EAA9CC,EAAO,OACbvC,EAAS,CACPpF,KAAM,cACN6D,KAAM8D,IACL,2CACJ,mDAND,EAOF,EAEaC,EAAW,SAAC7H,EAAI8H,GAC3B,wDAAO,WAAOzC,GAAQ,iGACI2B,EAAYV,MAAMtG,EAAI8H,EAAQ,GAAG,KAAD,EAAlDC,EAAS,OACf1C,EAAS,CACPpF,KAAM,OACN6D,KAAMiE,IACL,2CACJ,mDAND,EAOF,EAEaC,EAAc,SAAChI,EAAI2G,EAAUsB,GACxC,wDAAO,WAAO5C,GAAQ,mFACyB,OAAvC6C,EAAe,sBAAOvB,GAAQ,CAAEsB,IAAO,SACjBjB,EAAYN,YAAY1G,EAAIkI,GAAiB,KAAD,EAAlEC,EAAa,OACnB9C,EAAS,CACPpF,KAAM,UACN6D,KAAMqE,IACL,2CACJ,mDAPD,EAQF,EAEaC,EAAa,SAACpI,GACzB,wDAAO,WAAOqF,GAAQ,2FACd2B,EAAYH,OAAO7G,GAAI,KAAD,EAC5BqF,EAAS,CACPpF,KAAM,cACN6D,KAAM9D,IACL,2CACJ,mDAND,EAOF,EAEeqI,EA5EK,WAAyB,IAAxB3C,EAAK,uDAAG,GAAIC,EAAM,uCACrC,OAAQA,EAAO1F,MACb,IAAK,aACH,OAAO0F,EAAO7B,KAChB,IAAK,cACH,IAAMwE,EAAU,2BAAQ3C,EAAO7B,KAAKA,KAAKkB,MAAI,IAAEhF,GAAIsH,MACnD,MAAM,GAAN,mBAAW5B,GAAK,CAAE4C,IACpB,IAAK,OACH,IAAMtI,EAAK2F,EAAO7B,KAAKA,KAAKkB,KAAKhF,GAC3BuI,EAAe7C,EAAMZ,MAAK,SAACC,GAAC,OAAKA,EAAE/E,KAAOA,CAAE,IAC5CwI,EAAW,2BACZD,GAAY,IACf/B,MAAO+B,EAAa/B,MAAQ,IAE9B,OAAOd,EAAM3B,KAAI,SAACiB,GAAI,OAAMA,EAAKhF,KAAOA,EAAKgF,EAAOwD,CAAW,IACjE,IAAK,UAKL,QACE,OAAO9C,EAJT,IAAK,cACH,IAAM+C,EAAa9C,EAAO7B,KAC1B,OAAO4B,EAAMgD,QAAO,SAAC1D,GAAI,OAAKA,EAAKhF,KAAOyI,CAAU,IAI1D,E,2DCoKeE,GAjLK,SAAC1E,GACnB,IAAMjE,EAAK2E,cAAY3E,GACjBgF,EAAOf,EAAMA,MAAMa,MAAK,SAACC,GAAC,OAAKA,EAAE/E,KAAOA,CAAE,IAG1CqF,EAAWuD,cACXC,EAAUC,cAEhB,EAAoCjH,mBAAS,IAAG,mBAAzCkH,EAAU,KAAEC,EAAa,KAE1BC,EAAW,iDAAG,WAAOjE,GAAI,2EAC7B,IAKEK,EAASG,KACTH,EAASwC,EAAS7C,EAAKhF,GAAIgF,EAAKwB,QAChCnB,EACEF,EAAgB,IAAD,OACTH,EAAK3C,MAAK,iCAAyB2C,EAAKwB,MAAQ,EAAC,WAK3D,CAFE,MAAO0C,GACP7D,EAASF,EAAgB,uBAC3B,CAAC,2CACF,gBAhBgB,sCAkBXgE,EAAW,iDAAG,WAAO7H,GAAK,2EAC9B,IACEA,EAAMc,iBACNiD,EAASG,KACTH,EAASF,EAAgB,2BACzBE,EAAS2C,EAAYhD,EAAKhF,GAAIgF,EAAK2B,SAAUoC,IAE7CC,EAAc,GAGhB,CAFE,MAAOE,GACP7D,EAASF,EAAgB,wBAC3B,CAAC,2CACF,gBAXgB,sCAaXiE,EAAU,iDAAG,WAAOpE,GAAI,oGAGpBK,EAAS+C,EAAWpD,EAAKhF,KAAK,KAAD,EACnC6I,EAAQQ,KAAK,KACbhE,EAASF,EAAgB,8BAA8B,gDAEvDE,EACEF,EACE,qEAEF,yDAEL,gBAbe,sCAehB,OACE,qBAAK3B,UAAU,OAAM,SAsDlBwB,GACC,eAACsE,EAAA,EAAI,CAACC,OAAO,OAAOC,MAAM,SAASC,WAAW,UAAUzI,OAAO,OAAM,UACnE,cAAC0I,GAAA,EAAU,CAACxE,IAAI,SAAQ,SACtB,mCACSF,EAAK3C,MAAK,OAAW2C,EAAK1C,YAGrC,eAACqH,GAAA,EAAQ,CAACzE,IAAI,SAAS0E,IAAI,OAAOH,WAAW,UAAS,UACpD,4BAAIzE,EAAKzC,MACT,0CAAayC,EAAKhB,KAAKpD,QACvB,2CACA,6BACGoE,EAAK2B,SAAS5C,KAAI,SAACkE,GAAO,OACzB,6BAAmBA,IAzHZ,IAASV,KAAKC,UAAUC,QAAQ,GAyHP,MAGpC,sBAAM/H,SAAUyJ,EAAanJ,GAAG,WAAU,SACxC,eAACR,EAAA,EAAG,CAACqK,UAAU,MAAMxG,QAAQ,SAAQ,UACnC,8BACE,cAAC1D,EAAA,EAAS,CACRC,MAAOmJ,EACPlJ,SAAU,gBAAGC,EAAM,EAANA,OAAM,OAAOkJ,EAAclJ,EAAOF,MAAM,EACrDG,MAAM,UACNC,GAAG,mBAIP,cAAC,IAAM,CACLwC,SAAO,EACPvC,KAAK,SACLe,OAAQ,CAAED,IAAK,SACfhB,MAAM,WAER,uBACA,+BAIN,eAAC+J,GAAA,EAAU,CAAC5E,IAAK,CAAE6E,WAAY,UAAYN,WAAW,UAAS,UAC7D,cAAC,IAAM,CACLO,KAAM,cAACC,GAAA,EAAQ,CAAC7J,MAAM,MAAMiB,QAAS,kBAAM4H,EAAYjE,EAAK,IAC5DkF,gBAAc,IAEhB,8BAAIlF,EAAKwB,MAAK,YACd,cAAC,IAAM,CACLwD,KACE,cAACG,GAAA,EAAK,CACJ/J,MAAM,QACNiB,QAAS,WAEL+I,OAAOC,QAAQ,4CAEfjB,EAAWpE,EAEf,IAGJkF,gBAAc,WAO5B,EC1LMI,GAAY,CAChBC,eAAgB,OAChBnK,MAAO,QACP,SAAU,CACRA,MAAO,OAEToK,aAAc,SACdjB,OAAQ,QA0BKkB,GAvBH,WACV,OACE,sBACEpK,MAAO,CACLmJ,MAAO,OACPD,OAAQ,OACRtG,QAAS,OACTyH,eAAgB,eAChBzJ,gBAAiB,UACjBX,UAAW,KACX,UAEF,cAAC,IAAI,CAACmE,GAAG,IAAIpE,MAAOiK,GAAU,SAC5B,yCACK,OAEP,cAAC,IAAI,CAAC7F,GAAG,SAASpE,MAAOiK,GAAU,SACjC,2CAIR,EC9BMK,GAAK,iDAAG,WAAOC,GAAW,iGACPzE,IAAMC,KAJf,aAI6BwE,GAAa,KAAD,EAAzC,OAARvE,EAAQ,yBACPA,EAASvC,MAAI,2CACrB,gBAHU,sCAKL+G,GAAO,iDAAG,WAAOD,GAAW,iGACTzE,IAAMC,KARf,aAQ6BwE,GAAa,KAAD,EAAzC,OAARvE,EAAQ,yBACPA,EAASvC,MAAI,2CACrB,gBAHY,sCAMEgH,GAFM,CAAEH,SAAOE,Y,wCCDjBE,GAAU,SAACjH,GACtB,wDAAO,WAAOuB,GAAQ,2FACdA,EAAS,CACbpF,KAAM,QACN6D,SACC,KAAD,sCACH,mDALD,EAMF,EAMekH,GAzBM,WAA2B,IAA1BtF,EAAK,uDAAG,KAAMC,EAAM,uCACxC,OAAQA,EAAO1F,MACb,IAAK,QACH,IAAM4F,EAAQF,EAAO7B,KACrB,OAAO+B,EACT,IAAK,SACH,OAAO,KACT,QACE,OAAOH,EAEb,ECWeuF,GAnBK,WAAyB,IAAxBvF,EAAK,uDAAG,GAAIC,EAAM,uCACrC,MACO,eADCA,EAAO1F,KAEJ0F,EAAO7B,KAAKA,KAEZ4B,CAEb,E,wBCiCMwF,GAAiB,SAAH,GAAuC,IAAjCzH,EAAQ,EAARA,SAAU0H,EAAK,EAALA,MAAUvI,EAAK,kBAC3CwI,EAAO1I,IAAM2I,WAAWC,MAC9B,OACE,cAACC,GAAA,EAAI,yBAACJ,MAAOA,EAAMC,IAAWxI,GAAK,aAChCa,IAGP,EAwTe+H,GAtTH,WACV,MAAgC3J,mBAAS,IAAG,mBAArCzC,EAAQ,KAAEC,EAAW,KAC5B,EAAgCwC,mBAAS,IAAG,mBAArCvC,EAAQ,KAAEC,EAAW,KAC5B,EAAwBsC,mBAAS,IAAG,mBAA7BjB,EAAI,KAAED,EAAO,KACpB,EAA4CkB,oBAAS,GAAM,mBAApDrB,EAAc,KAAEC,EAAiB,KAGlC4E,EAAWuD,cACXpH,EAAeiK,aAAY,SAAC/F,GAAK,OAAKA,EAAMlE,YAAY,IAExDyC,EAAQwH,aAAY,SAAC/F,GAAK,OAAKA,EAAMzB,KAAK,IAC1CD,EAAOyH,aAAY,SAAC/F,GAAK,OAAKA,EAAM1B,IAAI,IACxCH,EAAQ4H,aAAY,SAAC/F,GAAK,OAAKA,EAAM7B,KAAK,IAGhD6H,qBAAU,WACRrG,EAASqC,KACTrC,EDxDF,iDAAO,WAAOA,GAAQ,iGACAc,IAAMe,IAAI,cAAc,KAAD,EAArCrD,EAAK,OACXwB,EAAS,CACPpF,KAAM,aACN6D,KAAMD,IACL,2CACJ,mDAND,GCyDA,GAAG,CAACrC,EAAc6D,IAElBqG,qBAAU,WACR,IAAMC,EAAiBvB,OAAOwB,aAAaC,QAAQ,qBACnD,GAAIF,EAAgB,CAClB,IAAM3H,EAAO8H,KAAKC,MAAMJ,GACxBtG,EAAS0F,GAAQ/G,IAEjBgD,EAAYI,SAASpD,EAAK6B,MAC5B,CACF,GAAG,CAACR,IAEJ,IAAM2G,EAAQC,qBAAU,CACtBC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACRhB,KAAM,OACN7B,OAAQ,QAEV8C,YAAa,CACXC,MAAO,CACL1M,MAAO,KAET2M,QAAS,CAAE3M,MAAO,UAKlBT,EAAW,iDAAG,WAAOmC,GAAK,iFACP,OAAvBA,EAAMc,iBAAiB,kBAEF0I,GAAaH,MAAM,CACpCvL,WACAE,aACC,KAAD,EAHI0E,EAAI,OAKVoG,OAAOwB,aAAaY,QAAQ,oBAAqBV,KAAKW,UAAUzI,IAEhEgD,EAAYI,SAASpD,EAAK6B,OAC1BR,EAAS0F,GAAQ/G,IACjBqB,EAASF,EAAgB,cAEzB9F,EAAY,IACZE,EAAY,IAAI,kDAEhB8F,EAASF,EAAgB,sBAAsB,0DAElD,gBAnBgB,sCAqBXzE,EAAgB,iDAAG,wFAEH,OAFG,SAErBkE,QAAQC,IAAIjE,GAAM,SAEZkK,GAAaD,QAAQ,CACzBzL,WACAwB,OACAtB,aACC,KAAD,EAEF+F,EAASF,EAAgB,qBAEzB9F,EAAY,IACZE,EAAY,IACZoB,EAAQ,IAAI,kDAEZ0E,EAASF,EAAgB,UAAU,0DAEtC,kBAlBqB,mCAoBhBuH,EAAc,SAACpL,GACnBA,EAAMc,iBACN3B,GAAkB,EACpB,EAEMkM,EAAY,iDAAG,WAAOrL,GAAK,2EAC/BA,EAAMc,iBACNgI,OAAOwB,aAAagB,WAAW,qBAC/BvH,EF5HK,CAAEpF,KAAM,WE6HboF,EAASF,EAAgB,eAEzB9F,EAAY,IACZE,EAAY,IAAI,2CACjB,gBARiB,sCAUZsN,EAAO,iDAAG,WAAOlF,GAAU,2EAC/B,IACEmF,EAAYC,QAAQ5J,mBAEpBkC,EAASzD,EAAW+F,IAEpBtC,EAASF,EAAgB,IAAD,OAAKwC,EAAWtF,MAAK,qBAG/C,CAFE,MAAO6G,GACP7D,EAASF,EAAgB,sBAC3B,CAAC,2CACF,gBAVY,sCAsBP8D,EAAW,iDAAG,WAAOjE,GAAI,2EAC7B,IAKEK,EAASG,KACTH,EAASwC,EAAS7C,EAAKhF,GAAIgF,EAAKwB,QAChCnB,EACEF,EAAgB,IAAD,OACTH,EAAK3C,MAAK,iCAAyB2C,EAAKwB,MAAQ,EAAC,WAK3D,CAFE,MAAO0C,GACP7D,EAASF,EAAgB,uBAC3B,CAAC,2CACF,gBAhBgB,sCA0FX2H,EAAcE,mBAEpB,OACE,cAACC,GAAA,EAAO,CAACjB,MAAOA,EAAM,SACpB,cAACV,GAAA,EAAkB4B,SAAQ,UACxB,SAAC9B,GAAI,OACJ,cAAC,GAAc,CACb+B,YAAY,EACZC,KAAM,CAAC,SAAU,OAAQ,QACzBhJ,QAAS,CAAC,OAAQ,QAClBwF,IAAI,QACJuB,MAAO,CACLmB,MAAO,CACL,CAAE1L,KAAM,MAAOyM,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACvC,CAAE1M,KAAM,QAASyM,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACzC,CAAE1M,KAAM,QAASyM,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,KAE3Cf,QAAS,CACP,CAAE3L,KAAM,MAAOyM,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACvC,CAAE1M,KAAM,QAASyM,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACzC,CAAE1M,KAAM,QAASyM,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,MAE3C,SAEF,eAAC,IAAM,WACL,eAAC9N,EAAA,EAAG,CAAC+N,SAAS,MAAK,UACjB,cAAC,GAAG,IACc,OAAjB/L,GACC,cAACgM,EAAY,CAAChM,aAAcA,OAGhC,eAAChC,EAAA,EAAG,CAAC+N,SAAS,QAAQ9N,MAAM,SAAQ,UAClC,uCAEU,OAATuE,GACC,qCACE,cAACyJ,EAAK,CACJtO,YAAaA,EACbC,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,YAAaA,KAEK,IAAnBiB,GACC,cAAC,EAAO,CACNA,eAAgBA,EAChBC,kBAAmBA,EACnBC,iBAAkBA,EAClBtB,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,YAAaA,EACboB,QAASA,EACTC,KAAMA,IAGV,cAAC,IAAM,CACLT,QAAQ,WACRkB,QAASqL,EACT3M,MAAM,mBAIF,OAATiE,GAtIb,eAACxE,EAAA,EAAG,CAACC,MAAM,SAAQ,UACjB,2CAAcuE,EAAKpD,QACnB,8BACE,cAAC,IAAM,CACL4B,SAAO,EACPnB,QAASsL,EACTvM,MAAM,kBACNL,MAAM,gBAgIU,OAATiE,GACC,cAAC,EAAS,CAACT,YAAY,YAAYV,IAAKiK,EAAY,SAClD,cAAC,EAAQ,CAAClL,WAAYiL,SAI5B,cAACrN,EAAA,EAAG,CAAC+N,SAAS,QAAQ9N,MAAM,SAAS+K,aAAa,SAAQ,SAExD,eAAC,IAAM,WACL,cAAC,IAAK,CAACkD,KAAK,aAAY,SACtB,cAAC,EAAI,CAAC7J,MAAOA,MAEf,cAAC,IAAK,CAAC6J,KAAK,SAAQ,SAClB,cAAC,EAAK,CAAC7J,MAAOA,MAEhB,cAAC,IAAK,CAAC6J,KAAK,aAAY,SACtB,cAAC,GAAW,CAACzJ,MAAOA,EAAOgF,YAAaA,MAE1C,cAAC,IAAK,CAACyE,KAAK,IAAG,SA3I7B,8BACGzJ,EACE0J,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAErH,MAAQoH,EAAEpH,KAAK,IAChCzC,KAAI,SAACiB,GAAI,OACR,qBAEE3E,MAAO,CACLc,OAAQ,kBACR2M,aAAc,QACd5M,QAAS,OACTsI,MAAO,SACP,SAGF,cAAC,IAAI,CAAC/E,GAAE,iBAAYO,EAAKhF,IAAK,SAAEgF,EAAK3C,SAThC2C,EAAKhF,GA+CN,iBA8FW,KAK3B,E,6BC5VM+N,GAAUC,2BAAgB,CAC9BhK,KAAMgH,GACNnH,MAAOoK,GACPhK,MAAOoE,EACP7G,aAAciE,IAGVyI,GAAQC,uBAAYJ,GAASK,+BAAoBC,2BAAgBC,QAEvEtH,EAAYC,SAASE,MAAK,SAAClD,GAAK,OAC9BA,EAAMsK,SAAQ,SAACvJ,GACbkJ,GAAM7I,SAASqC,IACjB,GAAE,IAGWwG,UCpBfM,IAAShK,OACP,cAAC,IAAQ,CAAC0J,MAAOA,GAAM,SACrB,cAAC,GAAG,MAENO,SAASC,eAAe,Q","file":"static/js/main.f5ad02ea.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from \"grommet\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst loginForm = ({\n  handleLogin,\n  username,\n  setUsername,\n  password,\n  setPassword\n}) => {\n  return (\n    <Box align=\"center\">\n      <form onSubmit={handleLogin}>\n        <div>\n          {/* Username:\n    <input\n      type=\"text\"\n      value={username}\n      name=\"Username\"\n      onChange={({ target }) => setUsername(target.value)}\n    /> */}\n          <TextField\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            label=\"Username\"\n            id=\"username\"\n          />\n        </div>\n\n        <div>\n          <TextField\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n          />\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n          id=\"login-button\"\n        >\n          Login\n        </Button>\n        <br />\n        <br />\n      </form>\n    </Box>\n  );\n};\n\nexport default loginForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from \"grommet\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst NewUser = ({\n  newUserVisible,\n  setNewUserVisible,\n  handleCreateUser,\n  username,\n  setUsername,\n  password,\n  setPassword,\n  setName,\n  name\n}) => {\n  const cancelCreate = (event) => {\n    setNewUserVisible(false);\n  };\n  return (\n    <Box\n      align=\"center\"\n      style={{\n        zIndex: 5,\n        position: \"absolute\",\n        top: \"20vh\",\n        margin: \"auto\",\n        backgroundColor: \"white\",\n        padding: \"80px\",\n        border: \"1px solid black\",\n        boxShadow: \"8px 8px 0px black\"\n      }}\n    >\n      <h4>Create an Account</h4>\n      <form onSubmit={handleCreateUser}>\n        <div>\n          {/* Username:\n    <input\n      type=\"text\"\n      value={username}\n      name=\"Username\"\n      onChange={({ target }) => setUsername(target.value)}\n    /> */}\n          <TextField\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            label=\"Username\"\n            id=\"username\"\n          />\n        </div>\n\n        <div>\n          <TextField\n            value={name}\n            onChange={({ target }) => setName(target.value)}\n            label=\"Name\"\n            type=\"name\"\n            id=\"name\"\n          />\n        </div>\n\n        <div>\n          <TextField\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n          />\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ margin: 10 }}\n          id=\"login-button\"\n        >\n          Sign Me Up!\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          style={{ margin: 10 }}\n          id=\"cancel\"\n          onClick={cancelCreate}\n        >\n          Cancel\n        </Button>\n        <br />\n        <br />\n      </form>\n    </Box>\n  );\n};\n\nexport default NewUser;\n","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst notificationAlert = ({ notification }) => {\n  return (\n    <div\n      style={{\n        zIndex: 5,\n        position: \"absolute\",\n        top: \"20vh\",\n        margin: \"auto\"\n      }}\n    >\n      <Alert\n        severity=\"info\"\n        style={{ padding: \"80px\", boxShadow: \"8px 8px 0px black\" }}\n      >\n        {notification}\n      </Alert>\n    </div>\n  );\n};\n\nexport default notificationAlert;\n","import React, { useState } from \"react\";\nimport { Button } from \"grommet\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst BlogForm = ({ createBlog }) => {\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"http://\");\n\n  const addBlog = (event) => {\n    event.preventDefault();\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    });\n    setNewTitle(\"\");\n    setNewAuthor(\"\");\n    setNewUrl(\"http://\");\n  };\n\n  return (\n    <form onSubmit={addBlog} id=\"blogForm\">\n      <div>\n        <TextField\n          value={newTitle}\n          onChange={({ target }) => setNewTitle(target.value)}\n          label=\"Title\"\n          id=\"titleInput\"\n        />\n      </div>\n\n      <div>\n        <TextField\n          value={newAuthor}\n          onChange={({ target }) => setNewAuthor(target.value)}\n          label=\"Author\"\n          id=\"authorInput\"\n        />\n      </div>\n\n      <div>\n        <TextField\n          value={newUrl}\n          type=\"url\"\n          onChange={({ target }) => setNewUrl(target.value)}\n          label=\"URL\"\n          id=\"urlInput\"\n        />\n      </div>\n\n      <Button primary type=\"submit\" margin={{ top: \"small\" }} label=\"Submit\" />\n\n      <br />\n      <br />\n    </form>\n  );\n};\nexport default BlogForm;\n","import React, { useState, useImperativeHandle } from \"react\";\nimport { Box, Button } from \"grommet\";\nimport PropTypes from \"prop-types\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n\n  return (\n    <Box align=\"center\" justify=\"center\">\n      <div style={hideWhenVisible}>\n        <Button\n          secondary\n          onClick={toggleVisibility}\n          margin={{ top: \"small\" }}\n          label={props.buttonLabel}\n        />\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <Button secondary onClick={toggleVisibility} label=\"Cancel\" />\n      </div>\n    </Box>\n  );\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nTogglable.displayName = \"Togglable\";\n\nexport default Togglable;\n","let notificationTimeout;\n\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      const content = action.data.content;\n      return content;\n    case \"RESET_NOTIFICATION\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (content) => {\n  return async (dispatch) => {\n    await dispatch({\n      type: \"SET_NOTIFICATION\",\n      data: { content }\n    });\n\n    clearTimeout(notificationTimeout);\n    notificationTimeout = setTimeout(() => {\n      dispatch(resetNotification());\n    }, 2000);\n  };\n};\n\nexport const resetNotification = () => {\n  return { type: \"RESET_NOTIFICATION\" };\n};\n\nexport default notificationReducer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n\nimport { DataTable, Text, Box, Meter } from \"grommet\";\n\nconst Users = (users) => {\n  const data = users.users.map((user) => ({\n    name: user.name,\n    id: user.id,\n    blogs: user.blogs.length\n  }));\n\n  return (\n    <div>\n      {/* <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead style={{ backgroundColor: \"#3f51b5\" }}>\n            <TableRow>\n              <TableCell align=\"left\" style={{ color: \"white\" }}>\n                Name\n              </TableCell>\n              <TableCell align=\"right\" style={{ color: \"white\" }}>\n                Blogs Created\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.users.map((user) => (\n              <TableRow key={user.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link to={`/users/${user.id}`}>{user.name}</Link>\n                </TableCell>\n                <TableCell align=\"right\">{user.blogs.length}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer> */}\n\n      <DataTable\n        columns={[\n          {\n            property: \"name\",\n            header: <Text>User</Text>,\n            primary: true,\n            render: (user) => <Link to={`/users/${user.id}`}>{user.name}</Link>\n          },\n          {\n            property: \"blogs\",\n            header: \"Number of Blogs\"\n          }\n        ]}\n        data={data}\n      />\n    </div>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { List } from \"grommet\";\n\nconst User = (users) => {\n  const id = useParams().id;\n  console.log(users);\n\n  const user = users.users.find((n) => n.id === id);\n  if (!user) {\n    return null;\n  }\n\n  const data = user.blogs.map((blog) => ({ id: blog.id, title: blog.title }));\n\n  return (\n    <div>\n      <h2>{user.name}</h2>\n      <h4>Added Blogs:</h4>\n\n      <List data={data} pad=\"small\">\n        {(blog) => <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>}\n      </List>\n\n      {/* <ul>\n        {user.blogs.map((blog) => (\n          <li>\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default User;\n","import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\n\nlet token = null;\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst patch = async (blogToUpdate, likes) => {\n  const newLikes = {\n    likes: likes\n  };\n\n  const response = await axios.patch(baseUrl + \"/\" + blogToUpdate, newLikes);\n  return response.data;\n};\n\nconst commentPost = async (blogToUpdate, comments) => {\n  const newComments = {\n    comments: comments\n  };\n\n  const response = await axios.post(\n    baseUrl + \"/\" + blogToUpdate + \"/comments\",\n    newComments\n  );\n  return response.data;\n};\n\nconst remove = async (blogToDelete) => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.delete(baseUrl + \"/\" + blogToDelete, config);\n  return response.data;\n};\n\nconst blogService = { getAll, create, patch, commentPost, remove, setToken };\n\nexport default blogService;\n","import blogService from \"../services/blogs\";\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_BLOGS\":\n      return action.data;\n    case \"CREATE_BLOG\":\n      const newContent = { ...action.data.data.blog, id: getId() };\n      return [...state, newContent];\n    case \"VOTE\":\n      const id = action.data.data.blog.id;\n      const blogToChange = state.find((n) => n.id === id);\n      const changedBlog = {\n        ...blogToChange,\n        likes: blogToChange.likes + 1\n      };\n      return state.map((blog) => (blog.id !== id ? blog : changedBlog));\n    case \"COMMENT\":\n      return state;\n    case \"REMOVE_BLOG\":\n      const idToDelete = action.data;\n      return state.filter((blog) => blog.id !== idToDelete);\n    default:\n      return state;\n  }\n};\n\nexport const initBlogs = (blogs) => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: \"INIT_BLOGS\",\n      data: blogs\n    });\n  };\n};\n\nexport const createBlog = (blogObject) => {\n  return async (dispatch) => {\n    const newBlog = await blogService.create(blogObject);\n    dispatch({\n      type: \"CREATE_BLOG\",\n      data: newBlog\n    });\n  };\n};\n\nexport const voteBlog = (id, votes) => {\n  return async (dispatch) => {\n    const votedBlog = await blogService.patch(id, votes + 1);\n    dispatch({\n      type: \"VOTE\",\n      data: votedBlog\n    });\n  };\n};\n\nexport const commentBlog = (id, comments, comment) => {\n  return async (dispatch) => {\n    const updatedComments = [...comments, comment];\n    const commentedBlog = await blogService.commentPost(id, updatedComments);\n    dispatch({\n      type: \"COMMENT\",\n      data: commentedBlog\n    });\n  };\n};\n\nexport const removeBlog = (id) => {\n  return async (dispatch) => {\n    await blogService.remove(id);\n    dispatch({\n      type: \"REMOVE_BLOG\",\n      data: id\n    });\n  };\n};\n\nexport default blogReducer;\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setNotification,\n  resetNotification\n} from \".././reducers/notificationReducer\";\nimport { voteBlog, removeBlog, commentBlog } from \".././reducers/blogReducer\";\nimport TextField from \"@material-ui/core/TextField\";\n// import Button from \"@material-ui/core/Button\";\n\nimport { Box, Button, Card, CardHeader, CardBody, CardFooter } from \"grommet\";\nimport { Favorite, Trash } from \"grommet-icons\";\n\nconst BlogDetails = (blogs) => {\n  const id = useParams().id;\n  const blog = blogs.blogs.find((n) => n.id === id);\n  const getId = () => (100000 * Math.random()).toFixed(0);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [newComment, setNewComment] = useState(\"\");\n\n  const updateLikes = async (blog) => {\n    try {\n      // note that by putting notifications first, clicks to update likes may not register when rapidly clicking,\n      // yet if patch is done first, notifcation timeout will take longer than 5 seconds\n      // this most likely would not be an issue if using a faster, production connection to mongodb?\n\n      dispatch(resetNotification());\n      dispatch(voteBlog(blog.id, blog.likes));\n      dispatch(\n        setNotification(\n          `\"${blog.title}\" has been updated to ${blog.likes + 1} likes`\n        )\n      );\n    } catch (exception) {\n      dispatch(setNotification(\"Error updating blog\"));\n    }\n  };\n\n  const postComment = async (event) => {\n    try {\n      event.preventDefault();\n      dispatch(resetNotification());\n      dispatch(setNotification(\"comment has been added\"));\n      dispatch(commentBlog(blog.id, blog.comments, newComment));\n\n      setNewComment(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"Error adding comment\"));\n    }\n  };\n\n  const deleteBlog = async (blog) => {\n    try {\n      // await blogService.remove(blog.id);\n      await dispatch(removeBlog(blog.id));\n      history.push(\"/\");\n      dispatch(setNotification(`The blog has been deleted`));\n    } catch (exception) {\n      dispatch(\n        setNotification(\n          \"Error deleting blog. You must be logged in as the blog's creator\"\n        )\n      );\n    }\n  };\n\n  return (\n    <div className=\"blog\">\n      {/* <h2>\n        &quot;{blog.title}&quot; - {blog.author}\n      </h2>\n      <p>{blog.url}</p>\n      <p>{blog.likes} likes</p>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        style={{ marginLeft: \".5rem\" }}\n        onClick={() => updateLikes(blog)}\n      >\n        Like\n      </Button>\n      &nbsp;\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          if (window.confirm(\"Do you really want to remove this blog?\")) {\n            deleteBlog(blog);\n          }\n        }}\n      >\n        Delete\n      </Button>\n      <p>added by {blog.user.name}</p>\n      <h3>Comments:</h3>\n      <ul>\n        {blog.comments.map((comment) => (\n          <li key={getId()}>{comment}</li>\n        ))}\n      </ul>\n      <form onSubmit={postComment} id=\"blogForm\">\n        <div>\n          <TextField\n            value={newComment}\n            onChange={({ target }) => setNewComment(target.value)}\n            label=\"Comment\"\n            id=\"commentInput\"\n          />\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginTop: 10 }}\n        >\n          Submit\n        </Button>\n        <br />\n        <br />\n      </form> */}\n      {blog && (\n        <Card height=\"auto\" width=\"medium\" background=\"light-3\" margin=\"10px\">\n          <CardHeader pad=\"medium\">\n            <h2>\n              &quot;{blog.title}&quot; - {blog.author}\n            </h2>\n          </CardHeader>\n          <CardBody pad=\"medium\" gap=\"none\" background=\"light-1\">\n            <p>{blog.url}</p>\n            <p>added by {blog.user.name}</p>\n            <h3>Comments:</h3>\n            <ul>\n              {blog.comments.map((comment) => (\n                <li key={getId()}>{comment}</li>\n              ))}\n            </ul>\n            <form onSubmit={postComment} id=\"blogForm\">\n              <Box direction=\"row\" justify=\"around\">\n                <div>\n                  <TextField\n                    value={newComment}\n                    onChange={({ target }) => setNewComment(target.value)}\n                    label=\"Comment\"\n                    id=\"commentInput\"\n                  />\n                </div>\n\n                <Button\n                  primary\n                  type=\"submit\"\n                  margin={{ top: \"small\" }}\n                  label=\"Submit\"\n                />\n                <br />\n                <br />\n              </Box>\n            </form>\n          </CardBody>\n          <CardFooter pad={{ horizontal: \"medium\" }} background=\"light-2\">\n            <Button\n              icon={<Favorite color=\"red\" onClick={() => updateLikes(blog)} />}\n              hoverIndicator\n            />\n            <p>{blog.likes} Likes</p>\n            <Button\n              icon={\n                <Trash\n                  color=\"plain\"\n                  onClick={() => {\n                    if (\n                      window.confirm(\"Do you really want to remove this blog?\")\n                    ) {\n                      deleteBlog(blog);\n                    }\n                  }}\n                />\n              }\n              hoverIndicator\n            />\n          </CardFooter>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"black\",\n  \":hover\": {\n    color: \"red\"\n  },\n  alignContent: \"center\",\n  height: \"100%\"\n};\n\nconst Nav = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"auto\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        backgroundColor: \"#e6f2fd\",\n        marginTop: \"0\"\n      }}\n    >\n      <Link to=\"/\" style={linkStyle}>\n        <h3>Blogs</h3>\n      </Link>\n      &nbsp;\n      <Link to=\"/users\" style={linkStyle}>\n        <h3>Users</h3>\n      </Link>\n    </div>\n  );\n};\n\nexport default Nav;\n","import axios from \"axios\";\nconst baseUrl = \"/api/login\";\nconst userUrl = \"/api/users\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst newUser = async (credentials) => {\n  const response = await axios.post(userUrl, credentials);\n  return response.data;\n};\nconst loginService = { login, newUser };\n\nexport default loginService;\n","const loginReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      const token = action.data;\n      return token;\n    case \"LOGOUT\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const setUser = (data) => {\n  return async (dispatch) => {\n    await dispatch({\n      type: \"LOGIN\",\n      data\n    });\n  };\n};\n\nexport const resetUser = () => {\n  return { type: \"LOGOUT\" };\n};\n\nexport default loginReducer;\n","import axios from \"axios\";\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_USERS\":\n      return action.data.data;\n    default:\n      return state;\n  }\n};\n\nexport const initUsers = (users) => {\n  return async (dispatch) => {\n    const users = await axios.get(\"/api/users\");\n    dispatch({\n      type: \"INIT_USERS\",\n      data: users\n    });\n  };\n};\n\nexport default userReducer;\n","// Core\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\n// Components\nimport Login from \"./components/Login\";\nimport NewUser from \"./components/NewUser\";\n// import Blog from \"./components/Blog\";\nimport Notification from \"./components/Notification\";\nimport BlogForm from \"./components/BlogForm\";\n// import BlogTable from \"./components/BlogTable\";\nimport Togglable from \"./components/Togglable\";\nimport Users from \"./components/Users\";\nimport User from \"./components/User\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport Nav from \"./components/Nav\";\n\n// Services\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\n\n// Grommet\nimport { Grommet, Box, Button, Grid, ResponsiveContext } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\n\n// Material-UI\n// import Grid from \"@material-ui/core/Grid\";\n// import Button from \"@material-ui/core/Button\";\n\n// Reducers\nimport {\n  setNotification,\n  resetNotification\n} from \"./reducers/notificationReducer\";\nimport { createBlog, initBlogs, voteBlog } from \"./reducers/blogReducer\";\nimport { setUser, resetUser } from \"./reducers/loginReducer\";\n\n// Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initUsers } from \"./reducers/usersReducer\";\n\nconst ResponsiveGrid = ({ children, areas, ...props }) => {\n  const size = React.useContext(ResponsiveContext);\n  return (\n    <Grid areas={areas[size]} {...props}>\n      {children}\n    </Grid>\n  );\n};\n\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [newUserVisible, setNewUserVisible] = useState(false);\n  // const [visible, setVisible] = useState(false);\n\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.notification);\n\n  const blogs = useSelector((state) => state.blogs);\n  const user = useSelector((state) => state.user);\n  const users = useSelector((state) => state.users);\n\n  // rerender blog list whenever the URL field changes, i.e. when the field is reset on submit\n  useEffect(() => {\n    dispatch(initBlogs());\n    dispatch(initUsers());\n  }, [notification, dispatch]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setUser(user));\n\n      blogService.setToken(user.token);\n    }\n  }, [dispatch]);\n\n  const theme = deepMerge({\n    global: {\n      font: {\n        family: \"Roboto\",\n        size: \"18px\",\n        height: \"20px\"\n      },\n      breakpoints: {\n        small: {\n          value: 900\n        },\n        desktop: { value: 1500 }\n      }\n    }\n  });\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user));\n\n      blogService.setToken(user.token);\n      dispatch(setUser(user));\n      dispatch(setNotification(\"Logged in\"));\n\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"Wrong credentials\"));\n    }\n  };\n\n  const handleCreateUser = async () => {\n    try {\n      console.log(name);\n\n      await loginService.newUser({\n        username,\n        name,\n        password\n      });\n\n      dispatch(setNotification(\"New user created\"));\n\n      setUsername(\"\");\n      setPassword(\"\");\n      setName(\"\");\n    } catch (exception) {\n      dispatch(setNotification(\"Error\"));\n    }\n  };\n\n  const userHandler = (event) => {\n    event.preventDefault();\n    setNewUserVisible(true);\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    window.localStorage.removeItem(\"loggedBlogAppUser\");\n    dispatch(resetUser());\n    dispatch(setNotification(\"Logged out\"));\n\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const addBlog = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility();\n\n      dispatch(createBlog(blogObject));\n\n      dispatch(setNotification(`\"${blogObject.title}\" has been added`));\n    } catch (exception) {\n      dispatch(setNotification(\"Error posting blog\"));\n    }\n  };\n\n  // const deleteBlog = async (blog) => {\n  //   try {\n  //     // await blogService.remove(blog.id);\n  //     dispatch(removeBlog(blog.id));\n  //     dispatch(setNotification(`\"${blog.title}\" has been deleted`));\n  //   } catch (exception) {\n  //     dispatch(setNotification(\"Error deleting blog\"));\n  //   }\n  // };\n\n  const updateLikes = async (blog) => {\n    try {\n      // note that by putting notifications first, clicks to update likes may not register when rapidly clicking,\n      // yet if patch is done first, notifcation timeout will take longer than 5 seconds\n      // this most likely would not be an issue if using a faster, production connection to mongodb?\n\n      dispatch(resetNotification());\n      dispatch(voteBlog(blog.id, blog.likes));\n      dispatch(\n        setNotification(\n          `\"${blog.title}\" has been updated to ${blog.likes + 1} likes`\n        )\n      );\n    } catch (exception) {\n      dispatch(setNotification(\"Error updating blog\"));\n    }\n  };\n\n  const welcomeUser = () => (\n    <Box align=\"center\">\n      <div>Welcome {user.name}</div>\n      <div>\n        <Button\n          primary\n          onClick={handleLogout}\n          color=\"status-critical\"\n          label=\"Logout\"\n        />\n      </div>\n    </Box>\n  );\n\n  const blogList = () => (\n    <div>\n      {blogs\n        .sort((a, b) => b.likes - a.likes)\n        .map((blog) => (\n          <div\n            key={blog.id}\n            style={{\n              border: \"1px solid black\",\n              marginBottom: \".5rem\",\n              padding: \"1rem\",\n              width: \"20rem\"\n            }}\n          >\n            {/* <Blog key={blog.id} blog={blog} /> */}\n            <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n            {/* <Togglable buttonLabel=\"View\">\n              {blog.url}\n              <br />\n              <div style={{ display: \"flex\" }}>\n                likes: &nbsp;\n                <div className=\"likesNumber\"> {blog.likes}</div>\n              </div>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{ marginLeft: \".5rem\" }}\n                onClick={() => updateLikes(blog)}\n              >\n                Like\n              </Button>\n              <br />\n              blog.user.name must be expressed after result of a conditional, otherwise  blog details try to render before post request goes through\n              {blog.user !== undefined && blog.user.name}\n              <br />\n              {/*  same as above \n              {blog.user !== undefined && blog.user.name === user.name && (\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    if (\n                      window.confirm(\"Do you really want to remove this blog?\")\n                    ) {\n                      deleteBlog(blog);\n                    }\n                  }}\n                >\n                  Delete\n                </Button>\n              )}\n              <br />\n            </Togglable> */}\n          </div>\n        ))}\n    </div>\n  );\n\n  const blogFormRef = useRef();\n\n  return (\n    <Grommet theme={theme}>\n      <ResponsiveContext.Consumer>\n        {(size) => (\n          <ResponsiveGrid\n            responsive={true}\n            rows={[\"xsmall\", \"auto\", \"auto\"]}\n            columns={[\"auto\", \"auto\"]}\n            gap=\"small\"\n            areas={{\n              small: [\n                { name: \"nav\", start: [0, 0], end: [1, 0] },\n                { name: \"login\", start: [0, 1], end: [1, 1] },\n                { name: \"blogs\", start: [0, 2], end: [1, 2] }\n              ],\n              desktop: [\n                { name: \"nav\", start: [0, 0], end: [1, 0] },\n                { name: \"login\", start: [0, 1], end: [0, 1] },\n                { name: \"blogs\", start: [1, 1], end: [1, 1] }\n              ]\n            }}\n          >\n            <Router>\n              <Box gridArea=\"nav\">\n                <Nav />\n                {notification !== null && (\n                  <Notification notification={notification} />\n                )}\n              </Box>\n              <Box gridArea=\"login\" align=\"center\">\n                <h2>Blogs</h2>\n\n                {user === null && (\n                  <>\n                    <Login\n                      handleLogin={handleLogin}\n                      username={username}\n                      setUsername={setUsername}\n                      password={password}\n                      setPassword={setPassword}\n                    />\n                    {newUserVisible === true && (\n                      <NewUser\n                        newUserVisible={newUserVisible}\n                        setNewUserVisible={setNewUserVisible}\n                        handleCreateUser={handleCreateUser}\n                        username={username}\n                        setUsername={setUsername}\n                        password={password}\n                        setPassword={setPassword}\n                        setName={setName}\n                        name={name}\n                      />\n                    )}\n                    <Button\n                      variant=\"outlined\"\n                      onClick={userHandler}\n                      label=\"Sign Me Up!\"\n                    ></Button>\n                  </>\n                )}\n                {user !== null && welcomeUser()}\n                {user !== null && (\n                  <Togglable buttonLabel=\"Post Blog\" ref={blogFormRef}>\n                    <BlogForm createBlog={addBlog} />\n                  </Togglable>\n                )}\n              </Box>\n              <Box gridArea=\"blogs\" align=\"center\" alignContent=\"center\">\n                {/* <Router> */}\n                <Switch>\n                  <Route path=\"/users/:id\">\n                    <User users={users} />\n                  </Route>\n                  <Route path=\"/users\">\n                    <Users users={users} />\n                  </Route>\n                  <Route path=\"/blogs/:id\">\n                    <BlogDetails blogs={blogs} updateLikes={updateLikes} />\n                  </Route>\n                  <Route path=\"/\">{blogList()}</Route>\n                </Switch>\n                {/* </Router> */}\n\n                {/* {user !== null && <BlogTable blogs={blogs} />} */}\n              </Box>\n            </Router>\n          </ResponsiveGrid>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport blogReducer, { initBlogs } from \"./reducers/blogReducer\";\nimport loginReducer from \"./reducers/loginReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\n\nimport blogService from \"./services/blogs\";\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  users: usersReducer,\n  blogs: blogReducer,\n  notification: notificationReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nblogService.getAll().then((blogs) =>\n  blogs.forEach((blog) => {\n    store.dispatch(initBlogs(blogs));\n  })\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}